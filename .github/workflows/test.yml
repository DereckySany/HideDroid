
name: Production Builds

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release-Build"
        default: "Generate release build"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out branch
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks
      - name: Build Release APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          chmod a+x ./gradlew
          ./gradlew assembleRelease
      - name: Create APK file
        run: |
          mkdir -p apk
          cp app/build/outputs/release/app-release.apk apk/
      - name: Zip APK file
        uses: papeloto/action-zip@v1
        with:
          files: apk/app-release.apk
          output: apkfile
      - name: Sending release build to Slack
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          file_path: ${{ steps.releaseApk.outputs.apkfile }}.zip
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          initial_comment: "Release build is now available."
